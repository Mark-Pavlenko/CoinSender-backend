import { MigrationInterface, QueryRunner } from "typeorm";

export class initMigration1673874391630 implements MigrationInterface {
    name = 'initMigration1673874391630'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."administrators_role_enum" AS ENUM('admin')`);
        await queryRunner.query(`CREATE TABLE "administrators" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "name" character varying(30), "second_name" character varying(30), "avatar_url" character varying(600), "organization_id" character varying(300) NOT NULL, "password" character varying(300) NOT NULL, "phone" character varying(32), "email" character varying NOT NULL, "currentHashedRefreshToken" character varying, "restorePasswordToken" character varying, "role" "public"."administrators_role_enum" DEFAULT 'admin', CONSTRAINT "UQ_4ee5216a00cb99b2dede98509c1" UNIQUE ("email"), CONSTRAINT "PK_aaa48522d99c3b6b33fdea7dc2f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "client" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "name" character varying(300) NOT NULL, "surname" character varying(300), "email" character varying NOT NULL, "avatar" character varying(600), "organization_id" character varying(300) NOT NULL, "blockchain" character varying(300), "wallet" character varying(300), "phone" character varying(300), CONSTRAINT "UQ_6436cc6b79593760b9ef921ef12" UNIQUE ("email"), CONSTRAINT "UQ_973367b3488760841c2a55449d1" UNIQUE ("wallet"), CONSTRAINT "PK_96da49381769303a6515a8785c7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "employee" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "name" character varying(300) NOT NULL, "second_name" character varying(300) NOT NULL, "wallet_id" character varying(300) NOT NULL, "avatar_url" character varying(600), "organization_id" character varying(300) NOT NULL, "amount" numeric NOT NULL, "position" character varying(30), "add_info" character varying(300), CONSTRAINT "PK_3c2bc72f03fd5abbbc5ac169498" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_f5ae9cc5f32997cf18e58bc0c8" ON "employee" ("wallet_id", "organization_id") `);
        await queryRunner.query(`CREATE TABLE "general_wallet" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "network" character varying(60) NOT NULL, "wallet_name" character varying(100), "wallet_address" character varying(600) NOT NULL, "organization_id" character varying(300), "administrator_id" integer, CONSTRAINT "PK_899976002f1914caa142a09fbe7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."invoices_items_qty_type_enum" AS ENUM('pc', 'h', 'd', 'wk', 'mo', 'words')`);
        await queryRunner.query(`CREATE TABLE "invoices_items" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "qty" integer NOT NULL, "qty_type" "public"."invoices_items_qty_type_enum", "unit_price" numeric NOT NULL, "discount" numeric NOT NULL, "tax" numeric NOT NULL, "amount" numeric NOT NULL, "invoice_number" integer NOT NULL, CONSTRAINT "PK_640e79fe86efc7c5f4916f3166e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "invoices" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "email" character varying(300) NOT NULL, "email_client" character varying(300) NOT NULL, "invoice_number" integer NOT NULL, "created_date" TIMESTAMP NOT NULL, "due_date" TIMESTAMP NOT NULL, "wallet" character varying(300) NOT NULL, "wallet_client" character varying(300) NOT NULL, "organization_id" character varying(300) NOT NULL, "status" boolean NOT NULL DEFAULT false, "pdf_name" character varying(300), "company_name_client" character varying(300), "amount_with_tax" numeric NOT NULL, "amount_total_tax" numeric NOT NULL, "amount_total" numeric NOT NULL, "amount_currency" character varying(300), "blockchain" character varying(300), "qr_code" character varying, CONSTRAINT "PK_668cef7c22a427fd822cc1be3ce" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organization" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "company_name" character varying(300) NOT NULL, "wallet_id" character varying(600), "wallet_secret_id" character varying(300), "organization_id" character varying(300) NOT NULL, CONSTRAINT "UQ_bc2860f33c8413e077e8e836884" UNIQUE ("company_name"), CONSTRAINT "PK_472c1f99a32def1b0abb219cd67" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payment" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "status" boolean NOT NULL DEFAULT false, "organization_wallet_id" character varying(300) NOT NULL, "wallet_id" character varying(600) NOT NULL, "value" numeric NOT NULL, "payer_secret_id" character varying(300), "hash" character varying(300) NOT NULL, CONSTRAINT "UQ_36ce28e7d1f417c8f835d257a62" UNIQUE ("hash"), CONSTRAINT "PK_fcaec7df5adf9cac408c686b2ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "roles" ("id" SERIAL NOT NULL, "role" character varying(32) NOT NULL, "roles_id" integer NOT NULL, CONSTRAINT "PK_c1433d71a4838793a49dcad46ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "transfers" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "wallet_id" character varying(300) NOT NULL, "amount" numeric NOT NULL, "organization_id" character varying(300) NOT NULL, "transfer_id" character varying(300) NOT NULL, "notes" character varying(600), "hash" character varying(300), CONSTRAINT "UQ_556cc893641c14dc7bc9ceb6bdb" UNIQUE ("transfer_id"), CONSTRAINT "PK_f712e908b465e0085b4408cabc3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "wallet" ("id" SERIAL NOT NULL, "description" character varying, "isArchived" boolean NOT NULL DEFAULT false, "createDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastChangedDateTime" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "wallet_type" character varying(60) NOT NULL, "wallet_id" character varying(600) NOT NULL, "organization_id" character varying(300), "administrator_id" integer, "encoded_signed_message" character varying(300), CONSTRAINT "PK_bec464dd8d54c39c54fd32e2334" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "invoices_items" ADD CONSTRAINT "FK_f515bea0e9ad84e77dea4c02a50" FOREIGN KEY ("invoice_number") REFERENCES "invoices"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "invoices_items" DROP CONSTRAINT "FK_f515bea0e9ad84e77dea4c02a50"`);
        await queryRunner.query(`DROP TABLE "wallet"`);
        await queryRunner.query(`DROP TABLE "transfers"`);
        await queryRunner.query(`DROP TABLE "roles"`);
        await queryRunner.query(`DROP TABLE "payment"`);
        await queryRunner.query(`DROP TABLE "organization"`);
        await queryRunner.query(`DROP TABLE "invoices"`);
        await queryRunner.query(`DROP TABLE "invoices_items"`);
        await queryRunner.query(`DROP TYPE "public"."invoices_items_qty_type_enum"`);
        await queryRunner.query(`DROP TABLE "general_wallet"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f5ae9cc5f32997cf18e58bc0c8"`);
        await queryRunner.query(`DROP TABLE "employee"`);
        await queryRunner.query(`DROP TABLE "client"`);
        await queryRunner.query(`DROP TABLE "administrators"`);
        await queryRunner.query(`DROP TYPE "public"."administrators_role_enum"`);
    }

}
